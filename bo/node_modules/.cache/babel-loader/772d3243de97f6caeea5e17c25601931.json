{"ast":null,"code":"import axios from \"axios\";\nimport { getHeaders, getAPI } from \"./utils\";\nconst SCHOOL_URL = getAPI(\"school\");\nconst OPTIONS_URL = getAPI(\"school/options\");\nconst OPTION_URL = getAPI(\"school/option\");\n\nconst getSchools = async () => {\n  try {\n    const resp = await axios.get(SCHOOL_URL, {\n      headers: getHeaders()\n    });\n    return resp.data;\n  } catch (e) {\n    throw new Error(\"Error loading schools\");\n  }\n};\n\nconst getOptions = async schoolId => {\n  try {\n    const resp = await axios.post(OPTIONS_URL, {\n      schoolId: schoolId\n    }, {\n      headers: getHeaders()\n    });\n    return resp.data;\n  } catch (e) {\n    throw new Error(\"Error loading options\");\n  }\n};\n\nconst deleteSchool = async id => {\n  try {\n    await axios.delete(SCHOOL_URL, {\n      headers: getHeaders(),\n      data: {\n        id: id\n      }\n    });\n  } catch (e) {\n    throw new Error(\"Error while deleting school\");\n  }\n};\n\nconst deleteOption = async (name, schoolId) => {\n  try {\n    await axios.delete(OPTION_URL, {\n      headers: getHeaders(),\n      data: {\n        name: name,\n        school: schoolId\n      }\n    });\n  } catch (e) {\n    throw new Error(\"Error while deleting option\");\n  }\n};\n\nconst insertOption = async (name, nbYears, schoolId) => {\n  try {\n    await axios.post(OPTION_URL, {\n      name: name,\n      nbyears: nbYears,\n      school: schoolId\n    });\n  } catch (e) {\n    throw new Error(\"Error when inserting the new option\");\n  }\n};\n\nconst editSchool = async (schoolId, name, address, phonenumber) => {\n  try {\n    await axios.patch(SCHOOL_URL, {\n      schoolId: schoolId,\n      name: name,\n      address: address,\n      phoneNumber: phonenumber\n    }, {\n      headers: getHeaders()\n    });\n  } catch (e) {\n    throw new Error(\"Error editing school\");\n  }\n};\n\nconst insertSchool = async (name, address, phonenumber) => {\n  try {\n    await axios.post(SCHOOL_URL, {\n      name: name,\n      address: address,\n      phonenumber: phonenumber\n    }, {\n      headers: getHeaders()\n    });\n  } catch (e) {\n    throw new Error(\"Error when inserting the new school\");\n  }\n};\n\nconst editOption = async (lastName, schoolId, name, nbYears) => {\n  try {\n    await axios.patch(OPTION_URL, {\n      lastName: lastName,\n      schoolId: schoolId,\n      name: name,\n      nbYears: nbYears\n    }, {\n      headers: getHeaders()\n    });\n  } catch (e) {\n    throw new Error(\"Error editing option\");\n  }\n};\n\nexport { getSchools, insertSchool, deleteSchool, editSchool, getOptions, insertOption, editOption, deleteOption };","map":{"version":3,"sources":["D:/Cours/Projets/React/API-BO/bo/src/API/school.js"],"names":["axios","getHeaders","getAPI","SCHOOL_URL","OPTIONS_URL","OPTION_URL","getSchools","resp","get","headers","data","e","Error","getOptions","schoolId","post","deleteSchool","id","delete","deleteOption","name","school","insertOption","nbYears","nbyears","editSchool","address","phonenumber","patch","phoneNumber","insertSchool","editOption","lastName"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {getHeaders, getAPI} from \"./utils\";\n\nconst SCHOOL_URL = getAPI(\"school\");\nconst OPTIONS_URL = getAPI(\"school/options\");\nconst OPTION_URL = getAPI(\"school/option\");\n\nconst getSchools = async () => {\n    try {\n        const resp = await axios.get(SCHOOL_URL, {headers: getHeaders()});\n        return resp.data;\n    } catch (e) {\n        throw new Error(\"Error loading schools\");\n    }\n}\n\nconst getOptions = async (schoolId) => {\n    try {\n        const resp = await axios.post(OPTIONS_URL, {\n            schoolId: schoolId\n        }, {headers: getHeaders()});\n        return resp.data;\n    } catch (e){\n        throw new Error(\"Error loading options\")\n    }\n}\n\nconst deleteSchool = async(id) => {\n    try {\n        await axios.delete(SCHOOL_URL, {\n            headers: getHeaders(),\n            data: {\n                id: id\n            }\n        });\n    } catch(e) {\n        throw new Error(\"Error while deleting school\");\n    }\n}\n\nconst deleteOption = async(name, schoolId) => {\n    try {\n        await axios.delete(OPTION_URL, {\n            headers: getHeaders(),\n            data: {\n                name: name,\n                school: schoolId\n            }\n        });\n    } catch(e) {\n        throw new Error(\"Error while deleting option\");\n    }\n}\n\nconst insertOption = async (name, nbYears, schoolId) => {\n    try {\n        await axios.post(OPTION_URL, {\n            name: name,\n            nbyears: nbYears,\n            school: schoolId\n        });\n    } catch(e) {\n        throw new Error(\"Error when inserting the new option\");\n    }\n}\nconst editSchool = async(schoolId, name, address, phonenumber) => {\n    try {\n        await axios.patch(SCHOOL_URL,\n            {\n                schoolId: schoolId,\n                name: name,\n                address: address,\n                phoneNumber: phonenumber\n            }, {headers: getHeaders()\n        });\n    } catch(e) {\n        throw new Error(\"Error editing school\");\n    }\n}\n\nconst insertSchool = async (name, address, phonenumber) => {\n    try {\n        await axios.post(SCHOOL_URL, {\n            name: name,\n            address: address,\n            phonenumber: phonenumber\n        }, {\n            headers: getHeaders()\n        });\n    } catch(e) {\n        throw new Error(\"Error when inserting the new school\");\n    }\n}\n\nconst editOption = async(lastName, schoolId, name, nbYears) => {\n    try {\n        await axios.patch(OPTION_URL,\n            {\n                lastName: lastName,\n                schoolId: schoolId,\n                name: name,\n                nbYears: nbYears\n            }, {headers: getHeaders()\n            });\n    } catch(e) {\n        throw new Error(\"Error editing option\");\n    }\n}\n\nexport {getSchools, insertSchool, deleteSchool, editSchool, getOptions, insertOption, editOption, deleteOption};"]},"metadata":{},"sourceType":"module"}