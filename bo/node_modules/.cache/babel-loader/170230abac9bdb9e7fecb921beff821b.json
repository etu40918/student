{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Cours\\\\Projets\\\\React\\\\API-BO\\\\bo\\\\src\\\\components\\\\Panel\\\\Publications\\\\Comment\\\\index.js\";\nimport React from \"react\";\nimport { getComments, deleteComment } from \"../../../../API/publication\";\nimport { confirmAlert } from \"react-confirm-alert\";\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      publiID: props.publiID\n    };\n  }\n\n  async componentDidMount() {\n    let comments = await getComments(this.props.publiID);\n    this.setState({\n      comments: comments\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.publiID !== this.props.publiID) {\n      let comments = await getComments(this.props.publiID);\n      this.setState({\n        publiID: this.props.publiID,\n        comments: comments\n      });\n    }\n  }\n\n  confirmDeleteComment(e, id) {\n    e.preventDefault();\n    confirmAlert({\n      title: 'Delete comment',\n      message: 'Do you really want to delete this comment ?',\n      buttons: [{\n        label: 'Yes',\n        onClick: async () => await this.deleteComment(id)\n      }, {\n        label: 'No'\n      }]\n    });\n  }\n\n  async deleteComment(id) {\n    await deleteComment(id);\n    const results = await getComments(this.props.publiID);\n    this.setState({\n      comments: results\n    });\n  }\n\n  commentsTab() {\n    let comments = this.state.comments;\n    return comments.map((comment, index) => {\n      const {\n        id,\n        content,\n        user,\n        date\n      } = comment;\n      let alt = index % 2 === 1 ? \"alt\" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteButton\",\n            onClick: e => this.confirmDeleteComment(e, id),\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"schoolTitle\",\n        children: \"COMMENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 54\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.commentsTab()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, this.props.publiID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/Cours/Projets/React/API-BO/bo/src/components/Panel/Publications/Comment/index.js"],"names":["React","getComments","deleteComment","confirmAlert","Comment","Component","constructor","props","state","comments","publiID","componentDidMount","setState","componentDidUpdate","prevProps","confirmDeleteComment","e","id","preventDefault","title","message","buttons","label","onClick","results","commentsTab","map","comment","index","content","user","date","alt","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {getComments, deleteComment} from \"../../../../API/publication\";\nimport {confirmAlert} from \"react-confirm-alert\";\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [],\n            publiID: props.publiID\n        }\n    }\n    async componentDidMount() {\n        let comments = await getComments(this.props.publiID);\n        this.setState({comments: comments});\n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.publiID !== this.props.publiID) {\n            let comments = await getComments(this.props.publiID);\n            this.setState({publiID: this.props.publiID, comments: comments});\n        }\n    }\n\n    confirmDeleteComment(e, id) {\n        e.preventDefault();\n        confirmAlert({\n            title: 'Delete comment',\n            message: 'Do you really want to delete this comment ?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: async () => await this.deleteComment(id)\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        });\n    }\n\n    async deleteComment(id){\n        await deleteComment(id);\n\n        const results = await getComments(this.props.publiID);\n        this.setState({\n            comments: results,\n        });\n    }\n\n\n    commentsTab() {\n        let comments = this.state.comments;\n\n        return comments.map((comment, index) => {\n            const {id, content, user, date} = comment;\n            let alt = (index % 2) === 1 ? \"alt\" : \"\";\n            return (\n                <tr key={index}>\n                    <td className={alt}>{content}</td>\n                    <td className={alt}>{user}</td>\n                    <td className={alt}>{date}</td>\n                    <td className={alt}><button className=\"deleteButton\" onClick={(e) => this.confirmDeleteComment(e, id)}>🗑</button></td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        return <div id=\"comments\" key={this.props.publiID}>\n            <p className=\"schoolTitle\">COMMENTS</p>\n            <div className=\"tableWrapper\">\n                <table>\n                    <thead>\n                    <tr><th>Content</th><th>User</th><th>Date</th><th>Delete</th></tr>\n                    </thead>\n                    <tbody>\n                    {this.commentsTab()}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    }\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}