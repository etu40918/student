{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Cours\\\\Projets\\\\React\\\\API-BO\\\\bo\\\\src\\\\components\\\\Panel\\\\Schools\\\\Options\\\\index.js\";\nimport React from \"react\";\nimport { getOptions, deleteOption, insertOption, editOption } from \"../../../../API/school\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"./style.css\";\n\nclass Options extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      schoolId: props.schoolId,\n      newOption: false,\n      editedOption: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let options = await getOptions(this.props.schoolId);\n    this.setState({\n      options: options\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.schoolId !== this.props.schoolId) {\n      let options = await getOptions(this.props.schoolId);\n      this.setState({\n        schoolId: this.props.schoolId,\n        options: options\n      });\n    }\n  }\n\n  async deleteOption(name, schoolId) {\n    await deleteOption(name, schoolId);\n    let options = await getOptions(this.props.schoolId);\n    this.setState({\n      options: options\n    });\n  }\n\n  async confirmDeleteOption(e, name, schoolId) {\n    e.preventDefault();\n    confirmAlert({\n      title: 'Delete option',\n      message: 'Do you really want to delete this option ?',\n      buttons: [{\n        label: 'Yes',\n        onClick: async () => await this.deleteOption(name, schoolId)\n      }, {\n        label: 'No'\n      }]\n    });\n  }\n\n  createNewOption() {\n    let tableWrapper = document.getElementById(\"optionTableWrapper\");\n    tableWrapper.scrollTop = 0;\n    this.setState({\n      newOption: true\n    });\n  }\n\n  async verifyNewOption(type) {\n    let optionName = document.getElementById(\"optionNameInput\");\n    let optionNbYears = document.getElementById(\"optionNbYearsInput\");\n    let error = false;\n    error = error ? true : this.verifyField(optionName, \"\", 50);\n    error = error ? true : this.verifyField(optionNbYears, \"\", 1);\n\n    if (!error) {\n      if (type === \"new\") await insertOption(optionName.value, optionNbYears.value, this.state.schoolId);else await editOption(this.state.editedOption, this.state.schoolId, optionName.value, optionNbYears.value);\n      this.closeSaveCancelTd();\n      const results = await getOptions(this.props.schoolId);\n      this.setState({\n        options: results\n      });\n    }\n  }\n\n  verifyField(field, verification, maxLength) {\n    let error = false;\n\n    if (field.value === verification || field.value.length > maxLength) {\n      error = true;\n      field.classList.add(\"errorInput\");\n    } else {\n      field.classList.remove(\"errorInput\");\n    }\n\n    return error;\n  }\n\n  editOption(name) {\n    this.setState({\n      editedOption: name\n    });\n  }\n\n  closeSaveCancelTd() {\n    this.setState({\n      newOption: false,\n      editedOption: \"\"\n    });\n  }\n\n  optionsTab() {\n    let options = this.state.options;\n    return options.map((option, index) => {\n      const {\n        name,\n        nbyears\n      } = option;\n      let alt = index % 2 === 1 ? \"alt\" : \"\";\n\n      if (name === this.state.editedOption) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"newRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"optionNameInput\",\n              type: \"text\",\n              placeholder: \"name\",\n              defaultValue: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"optionNbYearsInput\",\n              type: \"number\",\n              placeholder: \"nb years\",\n              defaultValue: nbyears\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: nbyears\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editOption(name),\n            className: \"editButton\",\n            children: \"\\u270F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: alt,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => this.confirmDeleteOption(e, name, this.state.schoolId),\n            className: \"deleteButton\",\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    let lastTd;\n    let newOptionRow = null;\n\n    if (!this.state.newOption && this.state.editedOption === \"\") {\n      lastTd = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 4,\n          className: \"lastTd\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addButton\",\n            onClick: () => this.createNewOption(),\n            children: \"NEW OPTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }, this);\n    } else {\n      if (this.state.newOption) {\n        newOptionRow = /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"newRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"optionNameInput\",\n              type: \"text\",\n              placeholder: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"optionNbYearsInput\",\n              type: \"number\",\n              placeholder: \"nb years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }, this);\n      }\n\n      lastTd = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 4,\n          className: \"lastTd\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"saveNew\",\n            onClick: () => this.verifyNewOption(this.state.newOption ? \"new\" : \"edit\"),\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancelNew\",\n            onClick: () => this.closeSaveCancelTd(),\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"schoolTitle\",\n        children: \"OPTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"optionTableWrapper\",\n        className: \"tableWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 56\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [newOptionRow, this.optionsTab(), lastTd]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, this.props.schoolId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Options;","map":{"version":3,"sources":["D:/Cours/Projets/React/API-BO/bo/src/components/Panel/Schools/Options/index.js"],"names":["React","getOptions","deleteOption","insertOption","editOption","confirmAlert","Options","Component","constructor","props","state","options","schoolId","newOption","editedOption","componentDidMount","setState","componentDidUpdate","prevProps","name","confirmDeleteOption","e","preventDefault","title","message","buttons","label","onClick","createNewOption","tableWrapper","document","getElementById","scrollTop","verifyNewOption","type","optionName","optionNbYears","error","verifyField","value","closeSaveCancelTd","results","field","verification","maxLength","length","classList","add","remove","optionsTab","map","option","index","nbyears","alt","render","lastTd","newOptionRow"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {getOptions, deleteOption, insertOption, editOption} from \"../../../../API/school\";\nimport {confirmAlert} from \"react-confirm-alert\";\nimport \"./style.css\";\n\nclass Options extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: [],\n            schoolId: props.schoolId,\n            newOption: false,\n            editedOption: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let options = await getOptions(this.props.schoolId);\n        this.setState({options: options});\n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.schoolId !== this.props.schoolId) {\n            let options = await getOptions(this.props.schoolId);\n            this.setState({schoolId: this.props.schoolId, options: options});\n        }\n    }\n\n    async deleteOption(name, schoolId){\n        await deleteOption(name, schoolId);\n\n        let options = await getOptions(this.props.schoolId);\n        this.setState({options: options});\n    }\n\n    async confirmDeleteOption(e, name, schoolId){\n        e.preventDefault();\n\n        confirmAlert({\n            title: 'Delete option',\n            message: 'Do you really want to delete this option ?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: async () => await this.deleteOption(name, schoolId)\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        });\n    }\n\n    createNewOption() {\n        let tableWrapper = document.getElementById(\"optionTableWrapper\")\n        tableWrapper.scrollTop = 0;\n\n        this.setState({\n            newOption: true\n        })\n    }\n\n    async verifyNewOption(type) {\n        let optionName = document.getElementById(\"optionNameInput\");\n        let optionNbYears = document.getElementById(\"optionNbYearsInput\");\n        let error = false;\n\n        error = error ? true : this.verifyField(optionName, \"\", 50);\n        error = error ? true : this.verifyField(optionNbYears, \"\", 1);\n\n        if(!error) {\n            if(type === \"new\")\n                await insertOption(optionName.value, optionNbYears.value, this.state.schoolId);\n            else\n                await editOption(this.state.editedOption, this.state.schoolId, optionName.value, optionNbYears.value);\n\n            this.closeSaveCancelTd();\n            const results = await getOptions(this.props.schoolId);\n            this.setState({\n                options: results\n            });\n        }\n    }\n\n    verifyField(field, verification, maxLength) {\n        let error = false;\n        if (field.value === verification || field.value.length > maxLength){\n            error = true;\n            field.classList.add(\"errorInput\");\n        } else {\n            field.classList.remove(\"errorInput\");\n        }\n\n        return error;\n    }\n\n    editOption(name){\n        this.setState({\n            editedOption: name\n        });\n    }\n\n    closeSaveCancelTd(){\n        this.setState({\n            newOption: false,\n            editedOption: \"\"\n        });\n    }\n\n    optionsTab() {\n        let options = this.state.options;\n\n        return options.map((option, index) => {\n            const {name, nbyears} = option;\n            let alt = (index % 2) === 1 ? \"alt\" : \"\";\n\n            if(name === this.state.editedOption){\n                return (<tr className=\"newRow\" key={index}>\n                    <td><input id=\"optionNameInput\" type=\"text\" placeholder=\"name\" defaultValue={name}/></td>\n                    <td><input id=\"optionNbYearsInput\" type=\"number\" placeholder=\"nb years\" defaultValue={nbyears}/></td>\n                    <td colSpan={2}/>\n                </tr>);\n            }\n\n            return (\n                <tr key={index}>\n                    <td className={alt}>{name}</td>\n                    <td className={alt}>{nbyears}</td>\n                    <td className={alt}><button onClick={() => this.editOption(name)} className=\"editButton\">✏</button></td>\n                    <td className={alt}><button onClick={(e) => this.confirmDeleteOption(e, name, this.state.schoolId)} className=\"deleteButton\">🗑</button></td>\n                </tr>\n            );\n        });\n    }\n\n    render(){\n        let lastTd;\n        let newOptionRow = null;\n        if(!this.state.newOption && this.state.editedOption === \"\") {\n            lastTd = (<tr>\n                <td colSpan={4} className=\"lastTd\">\n                    <button className=\"addButton\" onClick={() => this.createNewOption()}>NEW OPTION</button>\n                </td>\n            </tr>);\n        } else {\n            if(this.state.newOption) {\n                newOptionRow = (<tr className=\"newRow\">\n                    <td><input id=\"optionNameInput\" type=\"text\" placeholder=\"name\"/></td>\n                    <td><input id=\"optionNbYearsInput\" type=\"number\" placeholder=\"nb years\"/></td>\n                    <td colSpan={2}/>\n                </tr>);\n            }\n            lastTd = (<tr>\n                <td colSpan={4} className=\"lastTd\">\n                    <button className=\"saveNew\" onClick={() => this.verifyNewOption(this.state.newOption ? \"new\" : \"edit\")}>SAVE</button>\n                    <button className=\"cancelNew\" onClick={() => this.closeSaveCancelTd()}>CANCEL</button>\n                </td>\n            </tr>);\n        }\n        return <div id=\"options\" key={this.props.schoolId}>\n            <p className=\"schoolTitle\">OPTIONS</p>\n            <div id=\"optionTableWrapper\" className=\"tableWrapper\">\n                <table>\n                    <thead>\n                        <tr><th>Name</th><th>Years</th><th>Edit</th><th>Delete</th></tr>\n                    </thead>\n                    <tbody>\n                    {newOptionRow}\n                    {this.optionsTab()}\n                    {lastTd}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    }\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}